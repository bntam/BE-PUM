0x00404549:	call 0x00404551
0x00404551:	movl %ebx, $0x55<UINT32>
0x00404556:	call 0x0040455e
0x0040455e:	call 0x004045f2
0x004045f2:	xorl %eax, %eax
0x004045f4:	pushl %fs:(%eax)
0x004045f7:	movl %fs:(%eax), %esp
0x004045fa:	decl %ebx
0x004045fb:	int3
0x00404563:	call 0x0040456b
0x0040456b:	call 0x004045f2
0x00404570:	call 0x00404578
0x00404578:	call 0x00404635
0x00404635:	xorl %eax, %eax
0x00404637:	pushl %fs:(%eax)
0x0040463a:	movl %fs:(%eax), %esp
0x0040463d:	incl %ebx
0x0040463e:	int3
0x0040457d:	call 0x00404585
0x00404585:	call 0x00404635
0x0040458a:	call 0x00404592
0x00404592:	cmpl %ebx, $0x55<UINT8>
0x00404595:	call 0x0040459d
0x0040459d:	jne 0x004045cd
0x004045cd:	call 0x004045e0
0x004045e0:	xorl %eax, %eax
0x004045e2:	pushl %fs:(%eax)
0x004045e5:	movl %fs:(%eax), %esp
0x004045e8:	int3
0x004045d2:	call 0x004045a8
0x004045a8:	pusha
0x004045a9:	call 0x004045ae
0x004045ae:	popl %ebp
0x004045af:	subl %ebp, $0x427394<UINT32>
0x004045b5:	movl %edx, %ebp
0x004045b7:	addl %edx, $0x4273e3<UINT32>
0x004045bd:	pushl %edx
0x004045be:	call 0x004045c4
0x004045c4:	ret

0x004045c3:	ret

0x004045fd:	call 0x00404605
0x00404605:	xorl %ebx, %ebx
0x00404607:	movl %ecx, $0x42a4bf<UINT32>
0x0040460c:	subl %ecx, $0x42748e<UINT32>
0x00404612:	movl %edx, %ebp
0x00404614:	addl %edx, $0x42748e<UINT32>
0x0040461a:	leal %edi, (%edx)
0x0040461c:	movl %esi, %edi
0x0040461e:	xorl %eax, %eax
0x00404620:	call 0x00404628
0x00404628:	call 0x00404644
0x00404644:	lodsb %al, %ds:(%esi)
0x00404645:	rolb %al, $0x78<UINT8>
0x00404648:	stc
0x00404649:	addb %al, $0x61<UINT8>
0x0040464b:	jmp 0x0040464e
0x0040464e:	jmp 0x00404651
0x00404651:	nop
0x00404652:	xorb %al, $0x2c<UINT8>
0x00404654:	jmp 0x00404657
0x00404657:	addb %al, $0xffffff90<UINT8>
0x00404659:	rolb %al, $0x25<UINT8>
0x0040465c:	subb %al, %cl
0x0040465e:	xorb %al, $0x8<UINT8>
0x00404660:	subb %al, %cl
0x00404662:	subb %al, $0x4a<UINT8>
0x00404664:	nop
0x00404665:	addb %al, %cl
0x00404667:	addb %al, %cl
0x00404669:	jmp 0x0040466c
0x0040466c:	jmp 0x0040466f
0x0040466f:	jmp 0x00404672
0x00404672:	jmp 0x00404675
0x00404675:	addb %al, %cl
0x00404677:	jmp 0x0040467a
0x0040467a:	jmp 0x0040467d
0x0040467d:	jmp 0x00404680
0x00404680:	jmp 0x00404683
0x00404683:	jmp 0x00404686
0x00404686:	decb %al
0x00404688:	clc
0x00404689:	jmp 0x0040468c
0x0040468c:	jmp 0x0040468f
0x0040468f:	jmp 0x00404692
0x00404692:	subb %al, $0xffffffb5<UINT8>
0x00404694:	jmp 0x00404697
0x00404697:	rorb %al, $0x4a<UINT8>
0x0040469a:	addb %al, $0x46<UINT8>
0x0040469c:	jmp 0x0040469f
0x0040469f:	clc
0x004046a0:	jmp 0x004046a3
0x004046a3:	clc
0x004046a4:	nop
0x004046a5:	stosb %es:(%edi), %al
0x004046a6:	loop 0x00404644
0x004046a8:	call 0x004046b0
0x004046b0:	xorl %ebx, %ebx
0x004046b2:	movl %ecx, $0x42732f<UINT32>
0x004046b7:	subl %ecx, $0x426e46<UINT32>
0x004046bd:	movl %edx, %ebp
0x004046bf:	addl %edx, $0x426e46<UINT32>
0x004046c5:	leal %edi, (%edx)
0x004046c7:	movl %esi, %edi
0x004046c9:	xorl %eax, %eax
0x004046cb:	call 0x004046d3
0x004046d3:	movl %edx, %ebp
0x004046d5:	addl %edx, $0x4274c9<UINT32>
0x004046db:	leal %eax, (%edx)
0x004046dd:	pushl %eax
0x004046de:	ret

0x004046e3:	lodsb %al, %ds:(%esi)
0x004046e4:	nop
0x004046e5:	jmp 0x004046e8
0x004046e8:	jmp 0x004046eb
0x004046eb:	rorb %al, $0xffffffcb<UINT8>
0x004046ee:	stc
0x004046ef:	jmp 0x004046f2
0x004046f2:	jmp 0x004046f5
0x004046f5:	jmp 0x004046f8
0x004046f8:	decb %al
0x004046fa:	addb %al, $0x31<UINT8>
0x004046fc:	jmp 0x004046ff
0x004046ff:	subb %al, %cl
0x00404701:	clc
0x00404702:	jmp 0x00404705
0x00404705:	nop
0x00404706:	decb %al
0x00404708:	decb %al
0x0040470a:	jmp 0x0040470d
0x0040470d:	rolb %al, $0xffffffd6<UINT8>
0x00404710:	jmp 0x00404713
0x00404713:	jmp 0x00404716
0x00404716:	jmp 0x00404719
0x00404719:	stc
0x0040471a:	jmp 0x0040471d
0x0040471d:	subb %al, $0xffffff92<UINT8>
0x0040471f:	rorb %al, $0x30<UINT8>
0x00404722:	stc
0x00404723:	jmp 0x00404726
0x00404726:	subb %al, $0xffffff8b<UINT8>
0x00404728:	addb %al, %cl
0x0040472a:	jmp 0x0040472d
0x0040472d:	jmp 0x00404730
0x00404730:	nop
0x00404731:	rorb %al, $0x7d<UINT8>
0x00404734:	jmp 0x00404737
0x00404737:	xorb %al, $0x77<UINT8>
0x00404739:	jmp 0x0040473c
0x0040473c:	rolb %al, $0xffffffae<UINT8>
0x0040473f:	nop
0x00404740:	addb %al, %cl
0x00404742:	stc
0x00404743:	nop
0x00404744:	stosb %es:(%edi), %al
0x00404745:	loop 0x004046e3
0x00404747:	movl %eax, 0x42a030(%ebp)
0x0040474d:	call 0x00404755
0x00404755:	pushl %fs:0x30
0x0040475c:	popl %eax
0x0040475d:	testl %eax, %eax
0x0040475f:	js 12
0x00404761:	movl 0x42a3ac(%ebp), $0x1<UINT32>
0x0040476b:	jmp 0x00404777
0x00404777:	leal %eax, 0x42732f(%ebp)
0x0040477d:	movl %ecx, $0x429be3<UINT32>
0x00404782:	subl %ecx, $0x42732f<UINT32>
0x00404788:	pushl %ecx
0x00404789:	pushl %eax
0x0040478a:	call 0x004055ce
0x004055ce:	pushl %ebp
0x004055cf:	movl %ebp, %esp
0x004055d1:	pushl %ebx
0x004055d2:	pushl %ecx
0x004055d3:	pushl %edx
0x004055d4:	pushl %esi
0x004055d5:	pushl %edi
0x004055d6:	movl %eax, %ss:0x8(%ebp)
0x004055da:	movl %ecx, %ss:0xc(%ebp)
0x004055de:	movl %edi, %eax
0x004055e0:	xorl %eax, %eax
0x004055e2:	xorl %ebx, %ebx
0x004055e4:	xorl %edx, %edx
0x004055e6:	movb %al, (%edi)
0x004055e8:	mull %eax, %edx
0x004055ea:	addl %ebx, %eax
0x004055ec:	incl %edx
0x004055ed:	incl %edi
0x004055ee:	loop 0x004055e6
